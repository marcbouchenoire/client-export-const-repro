{
  "compilerOptions": {
    // For all packages, let TypeScript use the following standardized way to
    // resolve modules
    "moduleResolution": "node",

    // Don't produce *.js files when running TypeScript. We use `tsup` to
    // build our output files.
    "noEmit": true,

    // Settings with an effect on the generated code
    "esModuleInterop": true, // Emit safer code for packages that use namespace/default imports
    "stripInternal": true, // Don't emit public types for things annotated with @internal

    // Use better type checking
    "strict": true,
    "allowUnreachableCode": false, // False makes this stricter: errors instead of warns
    "allowUnusedLabels": false, // False makes this stricter: errors instead of warns
    "forceConsistentCasingInFileNames": true,
    "isolatedModules": true,
    "noImplicitReturns": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,

    "target": "es2015",
    "module": "es2015",
    "lib": ["dom", "es2015"],

    // Transform JSX syntax from input *.tsx files into React.createElement()
    // calls in the *.js build output.
    // NOTE: We can change this to `react-jsx` once we stop supporting React 16.
    "jsx": "react",

    // TODO: Try to get rid of these overrides
    "noUncheckedIndexedAccess": false // OVERWRITTEN to relax a bit
  },
  "include": ["src/**/*"]
}
